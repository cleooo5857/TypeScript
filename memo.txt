
타입 스크립트란 ?

자바스크립트는 자료형이  있다.

NUMBER
STRING
OBJECT

그러나 자바스크립에서의 자료형은 정해져있지 않다
런타임 해당 메모리에 저장된 값을 추론하여 타입을 동적으로 지정
let,const

그러나 반대로 정적타입언어에서는
선언 시 해당 변수는 어떠한 자료형만 들어갈 수 있도록 타입을 확실하게 정해준다.

ex)
let a = 5; ( js)
int a = 5; ( java )

자바스크립트는 해당 코드가 실행되었을 때 타입이 지정되기 떄문에
예를 들어 정수가 와야하는 곳에 문자열이 온다면
정적 타입언어에서는 소프트웨어가 실행되기 전에 에러
서비스 도중에 자바스크립트는 실행됨

결론적으로 타입을 정해주면 코드의 안정성이 생기며
더욱 안정적인 환경에서 개발자는 개발이 가능하게 됨

(1)
자바스크립트는 컴파일 단계가 아닌 런타임 단계에서 발생하는 에러를 방지 하고자
타입스크립트로 정적으로 타입을 주고 컴파일 단계에서 에러를 확인

(2)
매개변수 및 반환 데이터(결과값) 타입을 정해줌으로서
가독성 및 문서의 안정화

function add(a,b){
   ...
   ..
   .
   .
   .
   .
   
   return a + b
}

ts)
function add (a : number , b : number):number{

   return a + b 

}

(3)
타입스크립트는 ms사에서 개발하였으므로
본래 개발 취지는 oop을 위해 등장한 언어
따라서 ts는 js 보다 같은 객체지향 언어에 최적화


사용법

js.jsx -> ts, tsx로 변환

p.s
react의 컴포넌트는 jsx문법을 활용하고 있습니다
따라서 본래 뒤의 확자자명은 jsx여야하지만 js에서도 이를 용인

그러나 ts에서는 이를 js로 용인하지 않기 떄문에
react의 컴포넌트 함수의 경우 tsx 확장자를 사용해야한다

npm i -g ts-node
ts-node 파일명

타입스크립트의 타입 종류

js ( nunber, string, boolean, sybol, null, undefine, array, obj)
ts ( unknown, any, void, nerver...)
